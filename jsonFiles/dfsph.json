{
  "functions":{
    "dfsph": {
      "description": "Module used to implement a Divergence Free SPH (DFSPH) Solver. This solver is not very stable although it follows the paper as close as reasonably possible.",
      "folder": "DFSPH",
      "name": "DFSPH",
      "target": "cuda",
      "units": true,
      "cell_info": true,
      "virtual_info": true,
      "boundaryInfo": true,
      "neighbor_info": true,
      "functions": [ "density_solve", "divergence_solve" ],
      "parameters": [ "blendSteps", "boundaryViscosity" ],
      "depends_any": [ { "modules::pressure": "DFSPH" } ],
      "input": [ "position", "density", "fluidDensity" ],
      "temporary": [ "dfsphSource", "dfsphAlpha", "apparentVolume", "predictedAcceleration", "dfsphDpDt", "dfsphRhoStar" ],
      "output": [ "acceleration", "boundaryPressure", "volume", "volumeBoundaryAcceleration", "volumeBoundaryAngularAcceleration","lifetime" ],
      "swap": [ "velocity", "pressure" ]
    }
  },
  "arrays":{
    "dfsphArrays": {
      "dfsphSource": {
        "description": "Density change with respect to time estimated for DFSPH solver.",
        "type": "float",
        "unit": "void",
        "depends_any": [ { "modules::pressure": "DFSPH" } ],
        "kind": "particleData"
      },
      "dfsphAlpha": {
        "description": "Common factor used in the solve step of both density and divergence of DFSPH.",
        "type": "float",
        "unit": "SI::derived_unit<SI::recip<SI::Pa>>",
        "depends_any": [ { "modules::pressure": "DFSPH" } ],
        "kind": "particleData"
      },
      "dfsphDpDt": {
        "description": "Estimated density including advection forces at the new timestep.",
        "type": "float",
        "unit": "SI::Hz",
        "depends_any": [ { "modules::pressure": "DFSPH" } ],
        "kind": "particleData"
      },
      "dfsphRhoStar": {
        "description": "Estimated density including advection forces at the new timestep.",
        "type": "float",
        "unit": "void",
        "depends_any": [ { "modules::pressure": "DFSPH" } ],
        "kind": "particleData"
      }
    }
  },
  "uniforms":{
    "dfsph_settings": {
      "densityError": {
        "identifier": "densityError",
        "name": "Contains the average density error of the last solve step in percent.",
        "type": "float",
        "unit": "none",
        "default": "0.f"
      },
      "divergenceError": {
        "identifier": "divergenceError",
        "name": "Contains the average density error of the last solve step in percent.",
        "type": "float",
        "unit": "SI::Hz",
        "default": "0.f"
      },
      "densitySolverIterations": {
        "identifier": "densitySolverIterations",
        "name": "Contains the number of iterations for the DFSPH solver.",
        "type": "int32_t",
        "unit": "none",
        "default": "0"
      },
      "divergenceSolverIterations": {
        "identifier": "divergenceSolverIterations",
        "name": "Contains the number of iterations for the DFSPH solver.",
        "type": "int32_t",
        "unit": "none",
        "default": "0"
      },
      "densityEta": {
        "identifier": "densityEta",
        "name": "Maximum average density error allowed for the incompressibility solver in percent. Useful value: 0.01f.",
        "type": "float",
        "const": false,
        "unit": "none",
        "default": "0.0001f"
      },
      "divergenceEta": {
        "identifier": "divergenceEta",
        "name": "Maximum average density error allowed for the divergence free solver in percent. Useful value: 0.01f.",
        "type": "float",
        "const": false,
        "unit": "SI::Hz",
        "default": "0.001f"
      }
    }    
  }
}    